name: Trigger CI Flow for Apps

on:
  workflow_call:
    inputs:
      workflow_url:
        required: true
        type: string
      node:
        required: true
        type: string

jobs:
  trigger_workflow:
    name: Trigger Custom Workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 
          
      - name: Check Repository
        run: |
          echo $GITHUB_REPOSITORY
          if [ "$GITHUB_REPOSITORY" == "duc168/workflows" ]; then
            echo "Workflow skipped for repository 'duc168/workflows'"
            exit 78
          fi
          echo "Run custom workflow"
          
      - name: Get Current Branch Name
        id: get_branch
        run: |
          CURRENT_BRANCH="${{ github.event.pull_request.head.ref }}"
          echo "Current Branch Name: $CURRENT_BRANCH"
          echo "{current_branch}={CURRENT_BRANCH}" >> $GITHUB_OUTPUT
          

      - name: Extract Workflow URL
        id: workflow_url
        run: |
          WORKFLOW_URL="${{ inputs.workflow_url }}"
          echo $WORKFLOW_URL
          # echo "::set-output name=workflow_url::${WORKFLOW_URL}"
          echo "workflow_url=$WORKFLOW_URL" >> $GITHUB_OUTPUT
          
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github.event) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Get Latest Common Ancestor Commit
        id: ancestor_commit
        env:
          BASE_BRANCH: ${{ github.base_ref }}
        run: |
          COMMON_ANCESTOR_COMMIT=$(git merge-base --fork-point origin/$BASE_BRANCH)
          echo "Latest Common Ancestor Commit SHA: $COMMON_ANCESTOR_COMMIT"
          echo "sha=$COMMON_ANCESTOR_COMMIT" >> $GITHUB_OUTPUT  
          
      - name: Get Latest Commit
        id: get_latest_commit
        run: |
          # LATEST_COMMIT=$(git log -1 --format=%H)
          LATEST_COMMIT="${{ github.event.after }}"
          echo "Latest commit: $LATEST_COMMIT"
          echo "sha=$LATEST_COMMIT" >> $GITHUB_OUTPUT  
          
      - name: Get change path
        id: get_change_path
        run: |
          CHANGED_PATH=$(git diff-tree --no-commit-id --name-only -r ${{ github.event.after }})
          echo "Changed path: $CHANGED_PATH"
          echo "sha=$CHANGED_PATH" >> $GITHUB_OUTPUT  

      - name: Get change paths
        id: get_changed_paths
        run: |
          CHANGED_PATHS=$(git diff --name-only ${{ steps.ancestor_commit.outputs.sha }} ${{ steps.get_latest_commit.outputs.sha }})
          all_paths=()
          all_paths_string=""
          for path in $CHANGED_PATHS; do
          if [[ $path =~ apps/([^/]+)/.* ]]; then
              x="${BASH_REMATCH[1]}"
              if ! [[ " ${all_paths[@]} " =~ " $x " ]]; then
              all_paths+=("$x")
              all_paths_string+="$x,"
              fi
          fi
          # the comma at the end of the string is removed for the last path
          all_paths_string=${all_paths_string%?}
          echo "Changed paths: ${all_paths[*]}"
          
          
      - name: Loop Over App Names and Trigger Custom Workflow
        run: |
          WORKFLOW_URL="${{ steps.workflow_url.outtputs.workflow_url }}"
          APPS="${{ steps.get_changed_paths.outputs.list }}"
          echo $WORKFLOW_URL
          echo $APPS
          IFS=',' read -r -a array <<< "$APPS"
          for app in "${array[@]}"; do
            echo "Triggering custom workflow at URL: $WORKFLOW_URL for app: $app"
            echo "::set-output name=current_app::${app}"
            echo "Running workflow for app: $app"
            # gh workflow run -R $GITHUB_REPOSITORY -F app=$app -F node=${{ github.event.inputs.node }} --ref $GITHUB_REF "$WORKFLOW_URL"
          done
        if: steps.workflow_url.outputs.workflow_url && steps.get_changed_paths.outputs.list
